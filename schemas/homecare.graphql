type Query {
  # name: String
  # allHomecareCasePagination(startDate: String, endDate: String, projectIds: [String], status: [String], isInsur: String, search: String, offset: Int, limit: Int): homecareCasePagination
  # allHomecareCase(startDate: String, endDate: String, projectIds: [String], status: [String], isInsur: String): [homecareCase]
  # allHomecareCasePending(status: String, search: String, offset: Int, limit: Int): homecareCasePending
  # allHomecareCaseWaitForApproval(search: String, offset: Int, limit: Int): homecareCasePending
  # allHomecareCaseDetailForward(projectIds: [String], year: String, month: String): [homecareCaseDetail]
  # allHomecareCaseDetailOpen(projectIds: [String], year: String, month: String): [homecareCaseDetail]
  # allHomecareCaseDetailClose(projectIds: [String], year: String, month: String): [homecareCaseDetail]
  # allHomecareCaseDetailRemain(projectIds: [String], year: String, month: String): [homecareCaseDetail]
  # allHomecareCaseNoAuth(startDate: String, endDate: String): [homecareCase]
  # allHomecareCaseExpiredInsuranse(startDate: String, endDate: String, projectId: [String]): [homecareCase]
  # getHomecareStatus: [homecareCaseStatus]
  # getProject(projectId: String): ddlProject
  # myHomecareCheckingCase(projectId: String, status: String): [homecareCaseDetail]
  # myHomecareCheckingCaseById(id: String): homecareCaseDetail
  # allHomeCareEmployee: [employee]
  # myAssignCase(projectId: String, status: String): [homecareAssign]
  # myAssignCaseById(id: String): homecareAssign
  # getHomecarePerformance(sDate: String, eDate: String): [homecareNewPerformance]
  # allHomecareCaseDetailAppr(startDate: String, endDate: String, projectIds: [String]): [testHomecareCaseDetail]
  # allSysMasterProjects: [sysMasterProjects]
  # getProjectsToConnect(projectId: String): [sysMasterProjects]
  # getHomecareCase(projectId: String): [homecareCase]
  # allRoomHomecareCase(units: String, caseNumber: String, projectId: [String]): [homecareCase]
  # rpCaseGroupByUnitProj(projectIds: [String]): [dataCaseGroupByUnitProj]
  # rpOpencase(projectIds: [String]): [dataCaseGroupByUnitProj]
  # getHomecareBacklogUnit(projectIds: [String]): [dataCaseGroupByUnitProj]
  # getHomecareBacklogCsatUnit(projectIds: [String]): [dataCaseGroupByUnitProj]
  # getHomecareEmpSla(empName: [String]): [dataCaseGroupByUnitProj]
  # getHomecareEmpCsat(empName: [String]): [dataCaseGroupByUnitProj]
  # getHomecareBacklog(projectId: String): [dataCaseGroupByUnitProj]
  # getHomecareBacklogByProjectId(projectId: String): [dataCaseGroupByUnitProj]

  # """test"""
  # allConntHomecareCase(
  #   """test2"""
  #   startDate: String

  #   """test3"""
  #   endDate: String

  #   """test4"""
  #   projectIds: [String]
  # ): homecareCount

  # allHomecareCaseInsuring(search: String): [HomecareCaseUnInsuring]
  # allHomecareCaseUnInsuring: [HomecareCaseUnInsuring]
  # allHomecareCaseTest: [homecareCase]
  # getHomecareTransferAndInsurance(input: InputInsurance): insuranceType
  # getHomecareSlaRp(projectIds: [String], slaType: String, mMonth: [String], rPType: String, empId: [String]): [dataSLA]
  # getHomecareCsatRp(projectIds: [String], mMonth: [String], rPType: String, empId: [String]): [dataCsat]
  # allNitiServiceCase(startDate: String, endDate: String, projectId: [String]): [taskService]
  # allNitiServiceCentralCase(startDate: String, endDate: String, projectId: [String]): [taskServiceCentral]
  # allConntServiceCase(startDate: String, endDate: String, projectIds: [String]): serviceCount
  # allConntServiceCentralCase(startDate: String, endDate: String, projectIds: [String]): serviceCentralCount
  # getServiceDetailLog(id: String): [serviceDetailLogs]
  # getServiceCentralDetailLog(id: String): [serviceCentralDetailLogs]
  # rpNitiServiceByUnitProj(projectIds: [String]): [dataNitiServiceByUnitProj]
  # rpNitiServiceCentralByUnitProj(projectIds: [String]): [dataNitiServiceCentralByUnitProj]
  # centerAllNitiServiceCase(search: String, offset: Int, limit: Int): [taskService]
  # centerAllNitiServiceCentralCase(search: String, offset: Int, limit: Int): [taskServiceCentral]
  # allMainArea: [dataMainArea]
  # getMainAreaById(areaId: String): [dataMainArea]
  # allHomeCareEmployeeRespService: [employee]
  # allHomeCareEmployeeRespCentralService: [employee]
  # gethomecareCaseDetailById(mainId: String): [homecareCaseDetail]
  # pushHomecareLineNotify: [homecareCaseDetail]
  # pushHomecareLineNotifySLA3: [homecareCaseDetail]

  """
  รับหัวข้อการตรวจทั้งหมด
  """
  allHomecareCategory: [homecareCategory]

  """
  รับหัวข้อย่อยการตรวจทั้งหมด
  """
  allHomecareSubCategory: [homecareSubCategory]

  # allHomecareSubList: [homecareSubList]
  # allHomecareSLACategory: [homecareSlaCategory]
  # allHomecareSLASubCategory(category: String): [homecareSlaSubCategory]
  # getHomecareSubCategory(categoryId: String): [homecareSubCategory]
  # allHomecareNiti: [homecareNiti]
  # allHomecareNitiStatus: [homecareNitiStatus]
  # allHomecareNitiCategory: [homecareNitiCategory]
  # allHomecareNitiSubCategory: [homecareNitiSubCategory]
  # allHomeCareNitiArea: [area]
  # getHomecareCategoryByIds(ids: [String]): [homecareCategory]
  # getHomecareSubCategoryByIds(ids: [String]): [homecareSubCategory]
  # allHomecareCategoryNoAuth: [homecareCategory]
  # allHomecareSubCategoryNoAuth: [homecareSubCategory]
  # allHomecareSubListNoAuth: [homecareSubList]
  # allHomecareCaseCustomer(startDate: String, endDate: String, fullName: String, projectId: String, unitNumber: String): [homecareCase]
  # allHomecareCaseCustomerFinish(startDate: String, endDate: String, fullName: String, projectId: String, unitNumber: String): [homecareCase]

  """
  รับรายการแจ้งซ่อมทั้งหมด ของห้องที่เลือก
  """
  allHomecareCasePrimoplus(
    """
    รหัสโครงการ เช่น PRK01
    """
    projectId: String
    """
    หมายเลขห้อง เช่น A101
    """
    unitNumber: String
  ): [homecareCase]

  # getHomecareCasePrimoplusNoti(projectId: String, units: String): [homecareCase]

  """
  รับรายการแจ้งซ่อม จาก id ของเคสหลัก
  """
  getHomecareCasePrimoplus(id: String): homecareCase
  # myHomecareAssign(projectId: String, status: String, offset: String, startDate: String): [homecareCaseDetail]
  # myHomecareAssignFinish(projectId: String): [homecareCaseDetail]
  # myHomecareAssignById(id: ID): homecareCaseDetail
  # myHomecareAssignNew(projectId: String, status: String, startDate: String, unit: String, offset: Int, limit: Int, remark: String): homecareCaseDetailCount
  # myHomecareAssignFinishNew(projectId: String, offset: Int, limit: Int): homecareCaseDetailCount
  # allHomecareCause: [homecareCause]

  """
  รับคำถามที่ใช้ในการประเมินสำหรับลูกค้า
  """
  allHomecareCsatQuestion: [homecareCsatQuestion]

  """
  รับข้อมูลวันหยุดของพนักงาน
  """
  getCalendarIsWeekendByLength(
    """
    วันที่ค้นหาเริ่มต้น รูปแบบ 'YYYY-MM-DD'
    """
    startDate: String
    """
    วันที่ค้นหาสิ้นสุด รูปแบบ 'YYYY-MM-DD'
    """
    endDate: String
  ): [calendarWeekends]

  """
  ปฏิทินวันหยุดของพนักงานและวันที่ตรวจสอบซ่อมที่เลือกเต็มวัน
  """
  getHomecareCalendarDurationDate(
    """
    รหัสโครงการ เช่น SOR02
    """
    projectId: String!
    """
    หมายเลขห้อง เช่น z1421
    """
    unitNumber: String!
    """
    วันที่ค้นหาเริ่มต้น รูปแบบ 'YYYY-MM-DD' เช่น 2025-06-28
    """
    startDate: String!
    """
    วันที่ค้นหาสิ้นสุด รูปแบบ 'YYYY-MM-DD' เช่น 2025-06-28
    """
    endDate: String!
  ): [calendarWeekends]

  # allHomecareCsat(offset: Int, limit: Int, rangeTime: [String]): homecareCaseDetailCsat
  # allHcPhoneLog: [hcPhoneLogData]
  # getHcPhoneLog(detailCaseId: String!): hcPhoneLogData
  # getHomecarePhoneLogByCaseId(caseId: ID!): [hcPhoneLogData]
  # getHcCaseOpenByProject(projectId: String!): [hcCaseData]
  # getHomecareCalendar: [hcCaseData]
  # allHomecareCaseDetailByUserId: [homecareCaseDetail]
  # allhomecareLineToken: [homecareLineToken]
  # getReportSLA3(projectId: String): reportSLA3
  # allHomecareCaseByCaseNumber(caseNumber: [String]): [homecareCase]
  # allHomecareCaseToContractors: [HomecareCaseToContractor]
  # allHomecareCaseToContractorWithSearch(searchText: String): [HomecareCaseToContractor]
  # getTaskCentralServiceDetailsToFilesByTaskCentralServiceDetailsId(taskCentralServiceDetailsId: String): [TaskCentralServiceDetailsToFiles]
  # getHomecareReportLogsToFilesByIds(ids: [String]): [HomecareAssignReportLogsToFiles]
  # allTotalMyHomecareAssignById: Int
  # allTotalCloseMyHomecareAssignById: Int
  # getHomecareCaseByMeWithLoadMore(projectId: String, status: String, day: Date, units: String, limit: Int, remark: String, after: String): HomecareCaseDetailPagination
  # getHomecareCaseByMeFilterStatusFinishWithLoadMore(projectId: String, limit: Int, after: String): HomecareCaseDetailPagination

  """
  ช่วงเวลาเข้าตรวจสอบซ่อมในระบบตามวันที่ตรวจสอบซ่อมที่เลือก
  """
  getHomecareDurationTimeRange(
    """
    รหัสโครงการ เช่น SOR02
    """
    projectId: String!
    """
    หมายเลขห้อง เช่น z1421
    """
    unitNumber: String!
    """
    วันที่ตรวจสอบซ่อม รูปแบบ 'YYYY-MM-DD' เช่น 2025-06-28
    """
    checkInDate: String!
  ): [homecareDurationTimeRange]
}

type Mutation {
  # addName: String

  """
  เพิ่มรายการแจ้งซ่อม
  """
  createHomecareCase(
    """
    ชุดข้อมูลที่ลูกค้าเพิ่มรายการแจ้งซ่อม
    """
    input: inputEntryHomecareCase
  ): homecareCase

  # updateInsuranceDate(id: ID, insuranceDate: String): homecareCase
  # updateStatusHomecare(id: ID, status: String, type: String): homecareCase
  # updateHomecareCaseDetail(input: inputEntryHomecareCaseDetail): homecareCaseDetail
  # createHomecareAssign(input: inputEntryHomecareAssign): homecareAssign
  # createHomecareReportLogs(input: inputEntryHomecareReportLogs): homecareReportLogs
  # createHomecareAssignReportLogs(input: inputEntryHomecareAssignReportLogs): homecareReportLogs
  # updateHomecareAssign(input: inputEntryHomecareAssign): homecareAssign
  # updateCaseHomecare(input: inputAddCase): homecareCaseDetail
  # updateHomeCasePiority(input: inputPiority): homecareCaseDetail
  # createHomecareNitiService(input: inputEntryServiceCase): onSuccess
  # updateServiceCaseDetail(input: inputEntryServiceCase): onSuccess
  # createHomecareNitiServiceCentral(input: inputEntryServiceCentralCase): onSuccess
  # updateServiceCentralCaseDetail(input: inputEntryServiceCentralCase): taskServiceCentralDetail
  # createCaseUpdateService(input: inputEntryCaseUpdate): caseUpdate
  # createCaseUpdateServiceCentral(input: inputEntryCaseUpdateCentral): caseUpdateCentral
  # singleUpload(file: Upload, input: inputEntryformAttachment): uploadSuccess
  # singleUploadCentral(file: Upload, input: inputEntryformAttachmentCentral): uploadSuccess
  # closeServiceCentral(id: String): onSuccess
  # reProcessServiceCentral(id: String): onSuccess
  # removeFormAttachment(id: String, onMenu: String): Boolean
  # deleteHomecareCustomer(id: ID): homecareCase
  # updateSlaHomecareTel(id: ID): homecareAssign
  # updateSlaHomecareStartWork(id: ID): homecareAssign
  # updateSlaHomecareEndWork(id: ID): homecareAssign

  """
  ทำประเมินความพึงพอใจของลูกค้า
  """
  createCsat(
    """
    id ของเคสย่อย
    """
    detailId: ID!
    """
    ชุดข้อมูลที่ลูกค้าทำประเมิน
    """
    input: [inputHomecareCsat]!
    """
    ชมเชย/เสนอแนะ
    """
    remark: String
  ): [homecareCsat]

  # updateHomecareCsatClose(id: String, status: String, remark: String): homecareCaseDetail
  # updateHomecareCsatCloseAll(id: [String], status: String, remark: String): homecareCaseDetail
  # createHcPhoneLog(dtInput: inputHcPhoneLog): hcPhoneLogData
  # updateHcPhoneLog(dtInput: inputHcPhoneLog): hcPhoneLogData
  # updateStatusHomecareDetailById(id: ID!, status: String!): homecareCaseDetail
  # createHomecareLineToken: String
  # createdHomecareCaseToContractor(input: InputHomecareCaseToContractor): HomecareCaseToContractor
  # updatedHomecareCaseToContractor(input: InputHomecareCaseToContractor): HomecareCaseToContractor
  # deletedHomecareCaseToContractor(id: String): HomecareCaseToContractor
  # createdTaskCentralServiceDetailsToFiles(input: [TaskCentralServiceDetailsToFilesInput]): [TaskCentralServiceDetailsToFiles]
}

# type Subscription {
#   counter: String
# }

scalar Date

scalar Upload

"""
ข้อมูลพนักงาน
"""
type employee {
  id: ID
  """
  รหัสพนักงาน
  """
  employeeId: String
  firstnameThai: String
  lastnameThai: String
  firstnameEng: String
  lastnameEng: String
  email: String
  mobilePhone: String
}

"""
ข้อมูลโครงการ
"""
type ddlProject {
  id: String
  projectId: String
  projectName: String
  projectNameThai: String
  ProjectStatus: String
  ProjectType: String
}

"""
วันหยุดพนักงาน
"""
type calendarWeekends {
  id: ID
  date: Date
  title: String
  description: String
  # createdAt: Date
  # updatedAt: Date
  # createdBy: employee
  # updatedBy: employee
}

# type homecareCasePagination {
#   count: Int
#   rows: [homecareCase]
# }

# type insuranceType {
#   transferDate: Date
#   insuranceDate: Date
#   projectId: String
#   units: String
# }

# type uploadSuccess {
#   id: String
#   filePath: String
# }

# type serviceDetailLogs {
#   id: ID
#   taskServiceId: String
#   mainCategory: mainCategory
#   subCategory: subCategory
#   status: homecareCaseStatusMain
#   mainStatusId: String
#   taskServiceStatus: String
#   responsiblePerson: employee
#   appointmentDate: String
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   createdBy: employee
#   createdAt: Date
# }

# type serviceCentralDetailLogs {
#   id: ID
#   taskServiceId: String
#   mainCategory: mainCategory
#   subCategory: subCategory
#   status: homecareCaseStatusMain
#   mainStatusId: String
#   taskServiceStatus: String
#   responsiblePerson: employee
#   appointmentDate: String
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   createdBy: employee
#   createdAt: Date
# }

# type File {
#   fileName: String
#   mimeType: String
#   encoding: String
# }

# type Image {
#   filename: String
#   width: Int
#   height: Int
# }

# input inputFile {
#   file: String
# }

# input inputEntryformAttachment {
#   filePath: String
#   taskServiceDetailId: String
# }

# input inputEntryformAttachmentCentral {
#   filePath: String
#   taskServiceCenterDetailId: String
# }

# input inputEntryCaseUpdate {
#   message: String
#   taskServiceDetailId: String
# }

# input inputEntryCaseUpdateCentral {
#   message: String
#   taskServiceCenterDetailId: String
# }

# input InputInsurance {
#   projectId: String
#   units: String
# }

# input inputEntryServiceCentralCase {
#   username: String
#   project: String
#   area: String
#   building: String
#   floor: String
#   status: String
#   informerName: String
#   informerPhone: String
#   detail: [inputEntryServiceCaseDetail]
# }

# input inputEntryServiceCentralCaseDetail {
#   id: ID
#   mainCategoryId: String
#   subCategoryId: String
#   mainStatusId: String
#   detail: String
#   responsiblePerson: String
#   taskServiceStatus: String
#   appointmentDate: String
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
# }

# type serviceCount {
#   countAll: String
#   countAssign: String
#   countOpen: String
#   countInprocess: String
#   countFinish: String
#   countClose: String
# }

# type serviceCentralCount {
#   countAll: String
#   countAssign: String
#   countOpen: String
#   countInprocess: String
#   countReInProcess: String
#   countFinishByProject: String
#   countFinish: String
#   countClose: String
# }

# type onSuccess {
#   status: String
# }

# type mainArea {
#   id: String
#   name: String
#   areaType: String
# }

# type taskServiceCentral {
#   id: ID
#   serviceNumber: String
#   project: ddlProject
#   area: [mainArea]
#   building: [mainArea]
#   floor: [mainArea]
#   informerName: String
#   informerPhone: String
#   status: homecareCaseStatusMain
#   createdBy: employee
#   createdAt: Date
#   detail: [taskServiceCentralDetail]
# }

# type caseUpdate {
#   message: String
#   createdBy: employee
#   createdAt: Date
# }

# type caseUpdateCentral {
#   message: String
#   createdBy: employee
#   createdAt: Date
# }

# type mainFormAttachment {
#   id: String
#   filePath: String
#   createdBy: employee
#   createdAt: Date
# }

# type formAttachment {
#   id: String
#   filePath: String
#   createdBy: employee
#   createdAt: Date
# }

# type formAttachmentCentral {
#   id: String
#   filePath: String
#   createdBy: employee
#   createdAt: Date
# }

# type taskServiceCentralDetail {
#   id: ID
#   juristicPersonNo: String
#   detail: String
#   taskCentralServiceId: String
#   mainCategory: mainCategory
#   subCategory: subCategory
#   status: homecareCaseStatusMain
#   mainStatusId: String
#   responsiblePerson: employee
#   caseUpdate: [caseUpdateCentral]
#   formAttachment: [formAttachmentCentral]
#   mainFormAttachment: [formAttachmentCentral]
#   appointmentDate: String
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   createdBy: employee
#   createdAt: Date
#   updatedBy: employee
#   updatedAt: Date
#   filesMore: [TaskCentralServiceDetailsToFiles]
# }

# type taskService {
#   id: ID
#   serviceNumber: String
#   project: ddlProject
#   unit: String
#   fullName: String
#   phone: String
#   houseNumber: String
#   status: homecareCaseStatusMain
#   lastInsuranceDate: Date
#   insuranceDateDefault: String
#   transferDate: Date
#   createdBy: employee
#   createdAt: Date
#   detail: [taskServiceDetail]
# }

# type taskServiceDetail {
#   id: ID
#   juristicPersonNo: String
#   detail: String
#   taskServiceId: String
#   mainCategory: mainCategory
#   subCategory: subCategory
#   status: homecareCaseStatusMain
#   mainStatusId: String
#   taskServiceStatus: String
#   responsiblePerson: employee
#   appointmentDate: String
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   caseUpdate: [caseUpdate]
#   formAttachment: [formAttachment]
#   mainFormAttachment: [mainFormAttachment]
#   createdBy: employee
#   createdAt: Date
#   updatedBy: employee
#   updatedAt: Date
# }

# input inputEntryServiceCase {
#   username: String
#   project: String
#   unit: String
#   fullName: String
#   phone: String
#   houseNumber: String
#   status: String
#   checkInDate: Date
#   checkInRangeTime: String
#   repairDateFromCustomer: String
#   detail: [inputEntryServiceCaseDetail]
# }

# input inputEntryServiceCaseDetail {
#   id: ID
#   mainCategoryId: String
#   subCategoryId: String
#   mainStatusId: String
#   detail: String
#   responsiblePerson: String
#   taskServiceStatus: String
#   appointmentDate: String
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   file: [Upload]
# }

# type serviceCentralCase {
#   id: ID
#   serviceNumber: String
#   project: ddlProject
#   area: String
#   building: String
#   floor: String
#   informerName: String
#   informerPhone: String
#   status: homecareCaseStatusMain
#   createdBy: employee
#   createdAt: Date
#   detail: [serviceCaseCentralDetail]
# }

# type serviceCaseCentralDetail {
#   id: ID
#   juristicPersonNo: String
#   detail: String
#   responsiblePerson: employee
#   appointmentDate: String
#   appointmentTime: String
#   taskServiceStatus: String
#   mainCategory: mainCategory
#   subCategory: subCategory
#   status: homecareCaseStatusMain
#   createdBy: employee
#   createdAt: Date
#   updatedBy: employee
#   updatedAt: Date
# }

# type serviceCase {
#   id: ID
#   serviceNumber: String
#   project: ddlProject
#   unit: String
#   fullName: String
#   phone: String
#   status: homecareCaseStatusMain
#   checkInDate: Date
#   checkInRangeTime: homecareRangeTime
#   firstInDate: Date
#   firstInRangeTime: homecareRangeTime
#   createdBy: employee
#   lastInsuranceDate: Date
#   insuranceDateDefault: String
#   transferDate: Date
#   createdAt: Date
#   detail: [serviceCaseDetail]
# }

# type serviceCaseDetail {
#   id: ID
#   juristicPersonNo: String
#   detail: String
#   responsiblePerson: employee
#   appointmentDate: String
#   appointmentTime: homecareRangeTime
#   appointmentDateRepair: String
#   appointmentTimeRepair: homecareRangeTime
#   taskServiceStatus: homecareCaseStatusDetail
#   taskServiceId: String
#   mainCategoryId: mainCategory
#   subCategoryId: subCategory
#   createdBy: employee
#   createdAt: Date
# }

# input inputPiority {
#   id: ID
#   casePiority: Int
#   detailNumber: String
# }

# type HomecareCaseUnInsuring {
#   id: Int
#   owner: String
#   units: String
#   project: String
# }

# """test5"""
# type homecareCount {
#   countAll: String
#   countPending: String
#   countOpen: String
#   countChecking: String
#   countInprogress: String
#   countFinish: String
#   filterInsuringRoom: String
#   filterUnderInsuringRoom: String
# }

# input inputAddCase {
#   caseNumber: String
#   mainId: String
#   id: String
#   textCategory: String
#   textSubCategory: String
#   category: String
#   subcategory: String
#   sublist: String
#   description: String
#   status: String
#   homecareName: String
#   homecareInDate: Date
#   homecareRangeTime: String
#   assignInDate: Date
#   assignRangeTime: String
#   homecareStatus: String
#   reasonStatus: String
#   checkDeatil: String
#   singOwner: String
#   listDefect: String
#   causeId: ID
#   remark: String
#   slaId: ID
# }

"""
ชุดข้อมูลที่ลูกค้าเพิ่มรายการแจ้งซ่อม
"""
input inputEntryHomecareCase {
  # username: String
  """
  รหัสโครงการ เช่น PRK01
  """
  projectId: String
  """
  หมายเลขห้อง เช่น A101
  """
  units: String
  """
  ชื่อ-สกุลเจ้าของห้อง
  """
  owner: String
  """
  ช่องทางที่แจ้ง ของ primoplus ระบุเป็น '05'
  """
  channel: String
  """
  เบอร์โทรศัพท์เจ้าของห้อง
  """
  phoneOwner: String
  # status: String
  """
  วันที่เข้าตรวจ รูปแบบ 'YYYY-MM-DD HH:mm:ss'
  """
  checkInDate: String
  """
  ช่วงเวลาที่เข้าตรวจ เช่น '10-11'
  """
  checkInRangeTime: String
  # repairDateFromCustomer: String
  """
  รายการแจ้งซ่อม
  """
  detail: [inputEntryHomecareCaseDetail]
}

"""
รายการแจ้งซ่อม
"""
input inputEntryHomecareCaseDetail {
  """
  กำหนดเป็น UUIDv4
  """
  id: String
  # textCategory: String
  # textSubCategory: String
  """
  id ของ category
  """
  category: String
  """
  id ของ subcategory
  """
  subcategory: String
  # sublist: String
  """
  รายละเอียดเพิ่มเติม
  """
  description: String
  # status: String
  # homecareName: String
  # homecareInDate: Date
  # homecareRangeTime: String
  # assignInDate: Date
  # assignRangeTime: String
  # homecareStatus: String
  # reasonStatus: String
  # checkDeatil: String
  # singOwner: String
  # listDefect: String
  # causeId: ID
  # remark: String
  # slaId: ID
  """
  รูปภาพแนบประกอบ
  """
  files: [inputhomecareFiles]
  # contractor: String
  # endOfJobDate: Date
}

"""
รูปภาพแนบประกอบ
"""
input inputhomecareFiles {
  """
  กำหนดเป็น UUIDv4 เช่น
  """
  id: String
  # idNumber: Int
  """
  ชื่อไฟล์รูปที่ upload เช่น {{UUIDv4}}.jpg
  """
  fileName: String
  # fileType: String
  # uri: String
}

# input inputEntryHomecareAssign {
#   id: String
#   assignLogId: String
#   detailId: String
#   staffId: String
#   sublistId: String
#   requestDate: Date
#   requestRangeTime: String
#   sla: Int
#   staffStatus: String
#   caseStatus: String
#   comment: String
#   remark: String
#   reAssignRemark: String
#   finishType: String
#   assetComment: String
#   assetCustomerStatus: String
#   customerName: String
#   reAssignInDate: Date
#   reAssignRangeTime: String
#   files: [inputhomecareFiles]
# }

# input inputEntryHomecareReportLogs {
#   callBackDate: Date
#   checkInDate: Date
#   checkInRangeTime: String
#   remark: String
#   detailId: String
#   type: String
#   filesMove: [inputHomecareAssignReportLogsToFiles]
# }

# input inputHomecareAssignReportLogsToFiles {
#   fileId: String
#   fileName: String
#   fileFolder: String
# }

# input inputEntryHomecareAssignReportLogs {
#   callBackDate: Date
#   checkInDate: Date
#   checkInRangeTime: String
#   remark: String
#   assignId: String
#   type: String
#   filesMove: [inputHomecareAssignReportLogsToFiles]
# }

"""
รายละเอียดเคสหลัก
"""
type homecareCase {
  id: ID
  """
  หมายเลขเคสหลัก
  """
  caseNumber: String
  # project: ddlProject
  # units: String
  # owner: String
  # channel: homecareChannel
  # phoneOwner: String
  """
  สถานะของเคสหลัก
  """
  status: homecareCaseStatusMain
  """
  วันที่รับบริการ
  """
  checkInDate: Date
  # checkInDateService: String
  """
  ช่วงเวลาที่รับบริการ
  """
  checkInRangeTime: homecareRangeTime
  # firstInDate: Date
  # firstInRangeTime: homecareRangeTime
  # createdBy: employee
  # lastInsuranceDate: Date
  # insuranceDateDefault: String
  # transferDate: Date
  """
  วันที่แจ้งซ่อม
  """
  createdAt: Date
  """
  รายการแจ้งซ่อม
  """
  detail: [homecareCaseDetail]
  # insurance: Boolean
  # countDetail: Int
  # detailShowExcell: String
  # detailByDetailNumber(detailNumber: [String]): [homecareCaseDetail]
}

# type homecareCasePending {
#   count: Int
#   rows: [homecareCase]
# }

# type testHomecareCaseDetail {
#   id: ID
#   mainId: String
# }

# type sysMasterProjects {
#   id: ID
#   name: String
#   nameEng: String
#   companyId: String
#   projectStatus: String
# }

"""
รายการแจ้งซ่อมเคสย่อย
"""
type homecareCaseDetail {
  id: ID
  """
  รายการเคสหลัก
  """
  main: homecareCase
  """
  หมายเลขเคสย่อย
  """
  detailNumber: String
  # dateFinish: Date
  # defaultCategory: homecareCategory
  # defaultSubcategory: homecareCategory
  """
  หัวข้อหลักการตรวจ
  """
  category: homecareCategory
  """
  หัวข้อย่อยการตรวจ
  """
  subcategory: homecareSubCategory
  # # sublist: homecareSubList
  """
  รายละเอียดเพิ่มเติม
  """
  description: String
  """
  รายละเอียดขั้นตอนการตรวจของ Homecare
  """
  assignList: [homecareAssign]
  """
  สถานะของเคสย่อย
  """
  status: homecareCaseStatusDetail
  """
  ข้อมูลพนักงานที่รับผิดชอบ
  """
  homecareName: employee
  """
  วันที่ตรวจสอบหน้างาน
  """
  homecareInDate: Date
  """
  ช่วงเวลาที่ตรวจสอบหน้างาน
  """
  homecareRangeTime: homecareRangeTime
  """
  สถานะที่พนักงานเข้าตรวจ
  """
  homecareStatus: homecareCaseStatusHomecare
  # assignInDate: Date
  # assignRangeTime: homecareRangeTime
  # reasonStatus: String
  # checkDeatil: String
  # singOwner: String
  # listDefect: String
  # remark: String
  """
  รูปภาพประกอบ
  """
  files: detailFile
  # sla: homecareSla
  # slaTelDate: Date
  # cause: homecareCause
  """
  ข้อมูลที่ลูกค้าทำประเมิน
  """
  csat: [homecareCsat]
  """
  สถานะที่ลูกค้าทำประเมิน
  """
  csatStatus: String
  # reportLogs: [homecareReportLogs]
  # assignLogs: [homecareAssignLogs]
  # createdBy: employee
  # createdAt: Date
  # mainId: String
  # FDate: Date
  # SPDate: Date
  # hcPhoneLog: [hcPhoneLogData]
  # sla3: sla3
}

# type piority {
#   id: String
#   name: String
# }

"""
ลำดับขั้นตอนการทำงาน ของพนักงาน
"""
type homecareAssign {
  id: ID
  """
  รายละเอียดเคสย่อย
  """
  detail: homecareCaseDetail
  # assignNumber: String
  """
  สถานะของขั้นตอนนั้นๆ
  """
  status: homecareCaseStatusAssign
  # rank: String
  # comment: String
  # remark: String
  # requestDate: Date
  # requestRangeTime: homecareRangeTime
  # sublist: homecareSubList
  # sla: Int
  # staff: employee
  """
  รูปภาพประกอบ
  """
  files: assignFile
  # staffStatus: homecareCaseStatusStaff
  # reAssignRemark: String
  # finishType: String
  # assetComment: String
  # dateFinish: String
  # assetCustomerStatus: String
  # customerNameFinish: String
  # reAssignInDate: Date
  # slaStartDate: Date
  # slaEndDate: Date
  # homecareSlaWork: homecareSlaWork
  # reAssignRangeTime: homecareRangeTime
  # logs: [homecareAssignLogs]
}

# type homecareAssignLogs {
#   id: ID
#   assignId: String
#   detail: homecareCaseDetail
#   status: homecareCaseStatusAssign
#   rank: String
#   comment: String
#   remark: String
#   requestDate: Date
#   requestRangeTime: homecareRangeTime
#   # sublist: homecareSubList
#   sla: Int
#   staff: employee
#   files: assignFile
#   staffStatus: homecareCaseStatusStaff
# }

# type homecareReportLogs {
#   id: ID
#   createdAt: Date
#   callBackDate: Date
#   checkInDate: Date
#   checkInRangeTime: String
#   remark: String
#   detailId: String
#   type: String
#   filesMore: [HomecareAssignReportLogsToFiles]
# }

"""
สถานะของเคสหลัก
"""
type homecareCaseStatusMain {
  id: String
  name: String
  labelThai: String
  labelEng: String
  color: String
  bgColor: String
}

"""
สถานะของเคสย่อย
"""
type homecareCaseStatusDetail {
  id: String
  name: String
  labelThai: String
  labelEng: String
  color: String
  bgColor: String
}

"""
สถานะที่พนักงานเข้าตรวจ
"""
type homecareCaseStatusHomecare {
  id: String
  name: String
  labelThai: String
  labelEng: String
  color: String
  bgColor: String
}

"""
สถานะของขั้นตอนการทำงาน
"""
type homecareCaseStatusAssign {
  id: String
  name: String
  labelThai: String
  labelEng: String
  color: String
  bgColor: String
}

# type homecareCaseStatusStaff {
#   id: String
#   name: String
#   labelThai: String
#   labelEng: String
#   color: String
#   bgColor: String
# }

# type homecareCaseStatus {
#   id: String
#   name: String
#   labelThai: String
#   labelEng: String
#   color: String
#   bgColor: String
# }

"""
รูปภาพประกอบ
"""
type detailFile {
  id: ID
  """
  id ของเคสย่อย
  """
  detailId: String
  """
  รูปภาพของเจ้าของห้อง
  """
  owner: [homecareImage]
  """
  รูปภาพที่เจ้าหน้าที่ส่ง
  """
  homecare: [homecareImage]
}

"""
รูปภาพประกอบ
"""
type assignFile {
  id: ID
  # assignId: String
  """
  รูปภาพก่อนทำงาน (Before)
  """
  assignBefore: [homecareImage]
  """
  รูปภาพการป้องกันความเสียหาย (Protection)
  """
  assignProtect: [homecareImage]
  """
  รูปภาพระหว่างทำงาน (Doing)
  """
  assignDoing: [homecareImage]
  """
  รูปภาพหลังทำงานเสร็จ (Finish)
  """
  assignFinish: [homecareImage]
  # signature: [homecareImage]
  # assignUploadFinishCustomer: [homecareImage]
}

"""
รูปภาพประกอบ
"""
type homecareImage {
  id: String
  """
  id ของเคสย่อย
  """
  detailId: String
  # assignId: String
  """
  ชื่อไฟล์รูป
  """
  fileName: String
  # fileType: String
  # fileExtension: String
  """
  แสดงหรือไม่แสดง
  """
  isShow: Boolean
  """
  วันที่ทำรายการ
  """
  createdAt: Date
}

"""
ช่วงเวลา
"""
type homecareRangeTime {
  id: String
  name: String
  label: String
}

# type homecareChannel {
#   id: String
#   name: String
# }

# type homecareSlaWork {
#   id: String
#   status: String
#   overTime: Float
# }

# type homecarePerformance {
#   id: ID
#   homecareId: String
#   homecareName: employee
#   countWork: Float
#   status: homecareCaseStatusDetail
# }

# type homecareNewPerformance {
#   id: ID
#   caseNumber: String
#   resPerson: String
#   subHcStatus: String
# }

# type dataCaseGroupByUnitProj {
#   id: ID
#   OpenCase: String
#   channelReq: String
#   projectId: String
#   caseNumber: String
#   projectName: String
#   custName: String
#   Phone: String
#   unitNo: String
#   hNo: String
#   subWork: String
#   descr: String
#   caseStatus: String
#   subHcStatus: String
#   HcStatus: String
#   slaHour: String
#   resPerson: String
#   feedBack: String
#   Q1: String
#   Q2: String
#   Q3: String
#   Q4: String
#   createdAt: Date
#   StartProcessDate: Date
#   slaTelDate: Date
#   dateFinish: String
#   SLA1: String
#   SLA2: String
#   SLA1_S: String
#   SLA2_S: String
#   type: String
#   ttype: String
#   remark: String
#   dCurOpen: String
#   hCurOpen: String
#   casePiority: piority
#   isPiority: String
#   total: Int
# }

# type dataSLA {
#   id: String
#   pjName: String
#   empName: String
#   cSLA1: String
#   cSLA1_S: String
#   perSLA1: String
#   cSLA2: String
#   cSLA2_S: String
#   perSLA2: String
#   cSLA3: String
#   cSLA3_S: String
#   perSLA3: String
# }

# type dataCsat {
#   id: String
#   pjName: String
#   cQ1: String
#   cQ2: String
#   sQ1: String
#   sQ2: String
#   avgQ1: String
#   avgQ2: String
#   cCase: String
# }

# type dataNitiServiceByUnitProj {
#   id: ID
#   serviceNumber: String
#   project: String
#   unit: String
#   fullName: String
#   phone: String
#   houseNumber: String
#   status: String
#   transferDate: Date
#   nameThai: String
#   tsdId: String
#   juristicPersonNo: String
#   detail: String
#   responsiblePerson: String
#   responName: String
#   appointmentDate: Date
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   taskServiceStatus: String
#   mainCategoryId: String
#   mcName: String
#   subCategoryId: String
#   scName: String
#   SLA: String
#   mainStatusId: String
#   msName: String
#   tsdAssignDate: Date
#   tsdInProcessDate: Date
#   tsdFinishDate: Date
#   SLA1: String
#   SLA1_S: String
#   lastestRemark: String
#   dCurOpen: String
#   hCurOpen: String
#   createdAt: Date
# }

# type dataNitiServiceCentralByUnitProj {
#   id: ID
#   serviceNumber: String
#   project: String
#   areaType: String
#   name: String
#   seq: String
#   building: String
#   floor: String
#   informerName: String
#   status: String
#   createdBy: String
#   updatedBy: String
#   createdAt: Date
#   juristicPersonNo: String
#   detail: String
#   responsiblePerson: String
#   responName: String
#   appointmentDate: Date
#   appointmentTime: String
#   appointmentDateRepair: String
#   appointmentTimeRepair: String
#   taskCentralServiceId: String
#   mainCategoryId: String
#   mcName: String
#   subCategoryId: String
#   scName: String
#   SLA: String
#   mainStatusId: String
#   msName: String
#   assignDate: Date
#   inProcessDate: Date
#   reProcessDate: Date
#   finishDate: Date
#   closeDate: Date
#   lastestRemark: String
#   dCurOpen: String
#   hCurOpen: String
#   SLA1: String
#   SLA1_S: String
#   SLA2: String
#   SLA2_S: String
# }

# type dataMainArea {
#   id: ID
#   name: String
#   areaType: String
#   seq: String
# }

# type sla3 {
#   days: String
#   status: String
#   color: String
# }

# type area {
#   id: String
#   name: String
#   areaType: String
# }

# type homecareNitiSubCategory {
#   id: String
#   name: String
#   SLA: Int
#   mainCategoryId: String
#   mainCategory: homecareNitiCategory
# }

# type homecareNitiCategory {
#   id: String
#   name: String
#   mainMenuId: String
#   mainMenu: mainMenu
# }

# type mainMenu {
#   id: String
#   name: String
# }

# type homecareNitiStatus {
#   id: String
#   name: String
#   mainMenuId: String
#   mainMenu: mainMenu
# }

# type mainCategory {
#   id: String
#   name: String
# }

# type subCategory {
#   id: String
#   name: String
#   SLA: Int
# }

# type homecareNiti {
#   id: String
#   name: String
#   mainMenuId: String
#   mainCategory: mainCategory
# }

# type homecareSlaCategory {
#   id: String
#   category: String
# }

# type homecareSla {
#   id: ID
#   category: String
#   subCategory: String
#   hours: Float
#   days: Float
# }

# type homecareSlaSubCategory {
#   id: ID
#   category: String
#   subCategory: String
#   hours: Float
#   days: Float
# }

"""
หัวข้อหลักการตรวจ
"""
type homecareCategory {
  id: String
  nameThai: String
  nameEng: String
  subCategory: [homecareSubCategory]
  # categoryId: String
  seq: Int
}

"""
หัวข้อย่อยการตรวจ
"""
type homecareSubCategory {
  id: String
  nameThai: String
  nameEng: String
  category: homecareCategory
  # subList: [homecareSubList]
}

# type homecareSubList {
#   id: String
#   nameThai: String
#   nameEng: String
#   category: homecareCategory
#   subCategory: homecareSubCategory
# }

# type mainStatus {
#   id: String
#   name: String
# }

# type homecareCaseDetailCount {
#   count: Int
#   rows: [homecareCaseDetail]
# }

# type homecareCause {
#   id: ID
#   nameThai: String
#   nameEng: String
# }

# type homecareCaseDetailCsat {
#   count: Int
#   rows: [homecareCaseDetail]
# }

"""
ชุดข้อมูลที่ลูกค้าทำประเมิน
"""
input inputHomecareCsat {
  """
  id ของเคสหลัก
  """
  mainId: ID
  """
  id ของเคสย่อย
  """
  detailId: ID
  """
  id ของคำถาม
  """
  csatQuestionId: ID
  """
  คะแนนที่ลูกค้าให้ 1-5
  """
  score: Float
  """
  หมายเหตุ
  """
  remark: String
}

# type homecareCsatDetail {
#   id: String
#   mainId: String
#   main: homecareCase
#   detailNumber: String
#   dateFinish: String
#   status: homecareCaseStatusAssign
#   homecareCase: String
#   description: String
#   remark: String
# }

# type sadsadsadsa {
#   id: String
# }

"""
ข้อมูลที่ลูกค้าทำประเมิน
"""
type homecareCsat {
  id: ID
  """
  id ของเคสหลัก
  """
  mainId: ID
  """
  id ของเคสย่อย
  """
  detailId: ID
  """
  id ของคำถาม
  """
  csatQuestionId: ID
  """
  คะแนนที่ลูกค้าให้ 1-5
  """
  score: String
}

"""
คำถามที่ใช้ในการประเมิน
"""
type homecareCsatQuestion {
  id: ID
  seq: Int
  wordThai: String
  wordEng: String
  wordOther: String
  maxScore: Float
  defaultScore: Float
}

# type hcPhoneLogData {
#   id: String
#   caseId: String
#   detailCaseId: String
#   detailCaseNumber: String
#   caseNumber: String
#   detailCall1: String
#   detailCall2: String
#   detailCall3: String
#   dateCall1: Date
#   dateCall2: Date
#   dateCall3: Date
#   createdBy: String
#   updatedBy: String
# }

# input inputHcPhoneLog {
#   id: String
#   caseId: String
#   detailCaseId: String
#   detailCaseNumber: String
#   caseNumber: String
#   detailCall1: String
#   detailCall2: String
#   detailCall3: String
#   dateCall1: String
#   dateCall2: String
#   dateCall3: String
#   createdBy: String
#   updatedBy: String
# }

# type listIds {
#   id: String
# }

# type hcCaseData {
#   id: String
#   projectId: String
#   projectName: String
#   type: String
#   ttype: String
#   unitNo: String
#   hNo: String
#   custName: String
#   Phone: String
#   cadate: String
#   OpenCase: String
#   ReqCaseDate: Date
#   channelReq: String
#   assignDate: Date
#   caseNumber: String
#   subWork: String
#   descr: String
#   caseStatus: String
#   subHcStatus: String
#   HcStatus: String
#   slaHour: String
#   resPerson: String
#   feedBack: String
#   Q1: String
#   Q2: String
#   Q3: String
#   Q4: String
#   nitiRecReq: String
#   StartProcessDate: Date
#   SPDate: Date
#   slaTelDate: Date
#   dateFinish: String
#   FDate: Date
#   SLA1: String
#   SLA2: String
#   SLA1_S: String
#   SLA2_S: String
#   remark: String
#   lastInsuranceDate: Date
#   hCurOpen: String
#   dCurOpen: String
#   casePiority: String
#   isPiority: String
#   RN: String
#   AppointDate: Date
#   assignList: [homecareAssign]
#   listId: listIds
#   mainCase: homecareCase
#   detailCase: homecareCaseDetail
# }

# type homecareLineToken {
#   id: ID
#   type: String
#   status: String
#   projectId: String
#   token: String
# }

# type reportSLA3 {
#   count: reportSLA3Count
#   data: reportSLA3Data
# }

# type reportSLA3Data {
#   imminent: [reportSLA3Details]
#   fail: [reportSLA3Details]
# }

# type reportSLA3Details {
#   id: String
#   caseNumber: String
#   projectId: String
#   unitNumber: String
#   houseNumber: String
#   daysStart: Int
#   daysWork: Int
#   status: String
# }

# type reportSLA3Count {
#   imminent: Int
#   fail: Int
# }

# type HomecareCaseToContractor {
#   id: ID!
#   name: String!
#   type: String!
#   description: String
#   status: String!
#   createBy: employee!
#   updateBy: employee!
#   createdAt: String!
#   updatedAt: String!
# }

# input InputHomecareCaseToContractor {
#   id: ID
#   name: String!
#   type: String!
#   description: String
#   status: String!
# }

# input TaskCentralServiceDetailsToFilesInput {
#   taskCentralServiceDetailsId: String
#   fileId: String
#   fileName: String
#   fileFolder: String
# }

# type TaskCentralServiceDetailsToFiles {
#   id: ID
#   taskCentralServiceDetailsId: String
#   fileId: String
#   fileName: String
#   fileFolder: String
#   createdBy: employee
#   updatedBy: employee
#   createdAt: Date
#   updatedAt: Date
# }

# type HomecareAssignReportLogsToFiles {
#   id: ID
#   homecareReportLogsId: String
#   fileId: String
#   fileName: String
#   fileFolder: String
# }

# type HomecareCaseDetailPagination {
#   totalCount: Int
#   edges: [HomecareCaseDetailPaginationEdge]
#   pageInfo: HomecareCaseDetailPaginationPageInfo
# }

# type HomecareCaseDetailPaginationPageInfo {
#   hasNextPage: Boolean
#   hasPreviousPage: Boolean
#   startCursor: String
#   endCursor: String
# }

# type HomecareCaseDetailPaginationEdge {
#   node: homecareCaseDetail
#   cursor: String
# }

type homecareDurationTimeRange {
  """
  id ของช่วงเวลา
  """
  id: ID
  """
  ชื่อภาษาอังกฤษ
  """
  nameEn: String
  """
  ชื่อภาษาไทย
  """
  nameTh: String
  """
  สถานะการใช้งาน
  """
  disabled: Boolean
  """
  เวลาเริ่มต้น
  """
  timeRangeStart: Int
  """
  เวลาสิ้นสุด
  """
  timeRangeEnd: Int
}
